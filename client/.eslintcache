[{"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\index.js":"1","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\App.js":"2","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\reportWebVitals.js":"3","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\router\\AppRouter.js":"4","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\home\\HomePage.js":"5","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\main\\Header.js":"6","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\not-found\\NotFoundPage.js":"7","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\context\\loginContext.js":"8","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\reducers\\loginReducer.js":"9","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\cookies\\userDataCookies.js":"10","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\login\\LoginForm.js":"11","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\server\\db\\student.js":"12","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\actions\\loginActions.js":"13","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\server\\db\\teacher.js":"14","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\router\\LoginRoute.js":"15","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\login\\SignupForm.js":"16","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\server\\db\\course.js":"17","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\student\\ClassAttendance.js":"18","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\AddCourseModal.js":"19","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\RegisterCourseForm.js":"20","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\main\\Notification.js":"21","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\user\\ChangePasswordModal.js":"22","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\user\\ChangePasswordForm.js":"23","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\student\\StudentCourse.js":"24","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\TeacherCourse.js":"25","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\EnrolledStudent.js":"26","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\AddStudentToCourseModal.js":"27","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\AddStudentToCourseForm.js":"28","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\student\\AttendanceModal.js":"29","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\utils\\utils.js":"30","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\user\\CourseWrapper.js":"31"},{"size":526,"mtime":1612294185932,"results":"32","hashOfConfig":"33"},{"size":158,"mtime":1612293867172,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1609170650788,"results":"35","hashOfConfig":"33"},{"size":999,"mtime":1612515749947,"results":"36","hashOfConfig":"33"},{"size":3218,"mtime":1613723715013,"results":"37","hashOfConfig":"33"},{"size":2974,"mtime":1613719901915,"results":"38","hashOfConfig":"33"},{"size":157,"mtime":1612294816923,"results":"39","hashOfConfig":"33"},{"size":673,"mtime":1612296079350,"results":"40","hashOfConfig":"33"},{"size":493,"mtime":1612295091004,"results":"41","hashOfConfig":"33"},{"size":673,"mtime":1612296077330,"results":"42","hashOfConfig":"33"},{"size":3788,"mtime":1613495073786,"results":"43","hashOfConfig":"33"},{"size":2959,"mtime":1613728558811,"results":"44","hashOfConfig":"33"},{"size":162,"mtime":1612295126968,"results":"45","hashOfConfig":"33"},{"size":2485,"mtime":1613331008813,"results":"46","hashOfConfig":"33"},{"size":564,"mtime":1612717048831,"results":"47","hashOfConfig":"33"},{"size":3641,"mtime":1612515716101,"results":"48","hashOfConfig":"49"},{"size":904,"mtime":1613728644679,"results":"50","hashOfConfig":"33"},{"size":988,"mtime":1613489898617,"results":"51","hashOfConfig":"33"},{"size":1118,"mtime":1612725944917,"results":"52","hashOfConfig":"33"},{"size":5723,"mtime":1613497153997,"results":"53","hashOfConfig":"33"},{"size":604,"mtime":1612886847247,"results":"54","hashOfConfig":"33"},{"size":1247,"mtime":1612887252287,"results":"55","hashOfConfig":"33"},{"size":3449,"mtime":1613920591972,"results":"56","hashOfConfig":"33"},{"size":6808,"mtime":1613725344804,"results":"57","hashOfConfig":"33"},{"size":3382,"mtime":1613731314091,"results":"58","hashOfConfig":"33"},{"size":2980,"mtime":1613724329358,"results":"59","hashOfConfig":"33"},{"size":1338,"mtime":1613114405720,"results":"60","hashOfConfig":"33"},{"size":1391,"mtime":1613495787019,"results":"61","hashOfConfig":"33"},{"size":1898,"mtime":1613495965780,"results":"62","hashOfConfig":"33"},{"size":296,"mtime":1613407776743,"results":"63","hashOfConfig":"33"},{"size":1231,"mtime":1613920292112,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"7eu057",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d3abc5",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"67"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"67"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\index.js",[],["141","142"],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\App.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\reportWebVitals.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\router\\AppRouter.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\home\\HomePage.js",["143","144","145"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { LoginContext } from '../../context/loginContext';\r\nimport { getAllCoursesFromDB } from '../../server/db/course';\r\nimport Notification from '../main/Notification';\r\nimport StudentCourse from '../student/StudentCourse';\r\nimport AddCourseModal from '../teacher/AddCourseModal';\r\nimport TeacherCourse from '../teacher/TeacherCourse';\r\n\r\nconst HomePage = () => {\r\n    const { userDataState } = useContext(LoginContext);\r\n    \r\n    const [isAddCourseModalOpen, setIsAddCourseModalOpen] = useState(false);\r\n    const [isRegisterCourseVerificationNoticeOpen, setIsRegisterCourseVerificationNoticeOpen] = useState(false);\r\n    const [courses, setCourses] = useState([]);\r\n\r\n    let notificationText = 'Course has been added successfully';\r\n\r\n    let isComponentMounted = true;\r\n    useEffect(() => {\r\n        return () => {isComponentMounted = false;};\r\n    }, []);\r\n\r\n    const openAddCourseModal = () => {\r\n        setIsAddCourseModalOpen(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userDataState.user || !!userDataState.user.studentId) return;\r\n\r\n        getAllCoursesFromDB(userDataState.token)\r\n        .then((res) => {\r\n            setCourses([ ...courses ].concat(res));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            {\r\n                !!userDataState.user && !!userDataState.user.studentId ?\r\n                <div>\r\n                    {\r\n                        userDataState.user.courses.length === 0 ?\r\n                        <span className=\"home-headline\">I am currently not enrolled in any courses</span>:\r\n                        <span className=\"home-headline\">My Courses</span>\r\n                    }\r\n\r\n                    { userDataState.user.courses.map((course) => {\r\n                        return (\r\n                            <StudentCourse courseDetailsAndStudentAttendance={course.course} courseObjId={course.course.courseRef} key={course._id} />\r\n                        )\r\n                    }) }\r\n                </div>:\r\n                !!userDataState.user && !userDataState.user.studentId &&\r\n                <div>\r\n                    <span className=\"home-headline\">Courses</span>\r\n\r\n                    { courses.map((course) => {\r\n                        return (\r\n                            <TeacherCourse key={course._id} course={course} />\r\n                        );\r\n                    })}\r\n                    \r\n                    { !isAddCourseModalOpen && <button className=\"add-course-button\"onClick={openAddCourseModal}>Add Course</button> }\r\n                    { isAddCourseModalOpen && <AddCourseModal\r\n                        setIsAddCourseModalOpen={setIsAddCourseModalOpen}\r\n                        setIsRegisterCourseVerificationNoticeOpen={setIsRegisterCourseVerificationNoticeOpen}\r\n                    /> }\r\n                </div>\r\n            }\r\n            { isRegisterCourseVerificationNoticeOpen && <Notification text={notificationText} setIsNotificationOpen={setIsRegisterCourseVerificationNoticeOpen} /> }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomePage;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\main\\Header.js",["146"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { logoutAction } from '../../actions/loginActions';\r\nimport { LoginContext } from '../../context/loginContext';\r\nimport { deleteUserFromCookie } from '../../cookies/userDataCookies';\r\nimport ChangePasswordModal from '../user/ChangePasswordModal';\r\nimport Notification from './Notification';\r\n\r\nconst Header = () => {\r\n    const { userDataState, dispatchUserData } = useContext(LoginContext);\r\n\r\n    const [isChangePasswordModalOpen, setIsChangePasswordModalOpen] = useState(false);\r\n    const [isChangePasswordNoticeOpen, setIsChangePasswordNoticeOpen] = useState(false);\r\n    const [notificationText, setNotificationText] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const logoutOnClick = () => {\r\n        dispatchUserData(logoutAction());\r\n        deleteUserFromCookie();\r\n        history.push('/home');\r\n    }\r\n\r\n    const openChangePasswordModalOnClick = () => {\r\n        setIsChangePasswordModalOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            {\r\n                !!userDataState.user ?\r\n                <div className=\"header-content-container\">\r\n                    <div className=\"header-content\">\r\n                        <NavLink to='/home' className=\"header-link\" activeClassName=\"active-header-link\">Home</NavLink>\r\n\r\n                        <span className=\"header-greeting-text\">Hello {userDataState.user.fullName}</span>\r\n                    </div>\r\n                    <div className=\"header-content header-buttons-container\">\r\n                        <button onClick={openChangePasswordModalOnClick} className=\"change-password-button\">Change password</button>\r\n                        <button onClick={logoutOnClick}>Logout</button>\r\n                    </div>\r\n                </div>:\r\n                <div className=\"header-content-container__no-user\">\r\n                    \r\n\r\n                    <div className=\"bg\"></div>\r\n                    <div className=\"bg bg2\"></div>\r\n                    <div className=\"bg bg3\"></div>\r\n                    <div className=\"content\">\r\n                        <NavLink to='/home' className=\"header-link\" activeClassName=\"active-header-link\">Home</NavLink>\r\n                        <NavLink to=\"/login\" className=\"header-link\" activeClassName=\"active-header-link\">Login</NavLink>\r\n                    </div>\r\n                </div>\r\n            }\r\n            { isChangePasswordModalOpen && <ChangePasswordModal\r\n                setIsChangePasswordModalOpen={setIsChangePasswordModalOpen}\r\n                setIsChangePasswordNoticeOpen={setIsChangePasswordNoticeOpen}\r\n                setNotificationText={setNotificationText}\r\n            /> }\r\n            { isChangePasswordNoticeOpen && <Notification text={notificationText} setIsNotificationOpen={setIsChangePasswordNoticeOpen} /> }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\not-found\\NotFoundPage.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\context\\loginContext.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\reducers\\loginReducer.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\cookies\\userDataCookies.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\login\\LoginForm.js",["147"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { saveUserOnCookie } from '../../cookies/userDataCookies';\r\nimport { loginStudentInDB } from '../../server/db/student';\r\nimport { loginAction } from '../../actions/loginActions';\r\nimport { LoginContext } from '../../context/loginContext';\r\nimport { loginTeacherInDB } from '../../server/db/teacher';\r\n\r\nconst LoginForm = () => {\r\n    const { dispatchUserData } = useContext(LoginContext);\r\n\r\n    const [isEmailOrIdInputEmpty, setIsEmailOrIdInputEmpty] = useState(false);\r\n    const [passwordInputErrorMessage, setPasswordInputErrorMessage] = useState('');\r\n    const [hasLoginFailed, setHasLoginFailed] = useState(false);\r\n\r\n    let isComponentMounted = true;\r\n    useEffect(() => {\r\n        return () => { isComponentMounted = false };\r\n    }, []);\r\n\r\n    const emailAndIdInputOnBlur = (e) => {\r\n        if (!isComponentMounted) return;\r\n\r\n        if (e.target.value.trim() === '') return setIsEmailOrIdInputEmpty(true);\r\n        setIsEmailOrIdInputEmpty(false);\r\n    }\r\n\r\n    const passwordInputOnBlur = (e) => {\r\n        if (!isComponentMounted) return;\r\n\r\n        if (e.target.value.trim() === '') return setPasswordInputErrorMessage('Password cannot be empty!');\r\n        if (e.target.value.length < 6) return setPasswordInputErrorMessage('Password cannot contain less than 6 characters!');\r\n        if (!(/w*[a-zA-Z]\\w*/).test(e.target.value)) return setPasswordInputErrorMessage('Password must contain at least one letter!');\r\n        if (!(/[\\d]{1}/).test(e.target.value)) return setPasswordInputErrorMessage('Password must contain at least one number!');\r\n        if (!(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$/).test(e.target.value)) return setPasswordInputErrorMessage('Password must contain at least one capital letter!');\r\n\r\n        setPasswordInputErrorMessage('');\r\n    }\r\n\r\n    const onSubmitLoginIn = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isEmailOrIdInputEmpty || passwordInputErrorMessage !== '') return;\r\n\r\n        loginStudentInDB(e.target[0].value, e.target[1].value)\r\n        .then((res) => {\r\n            dispatchUserData(loginAction({ user: res.user, token: res.token }));\r\n            saveUserOnCookie(res);\r\n            if (isComponentMounted) setHasLoginFailed(false);\r\n        })\r\n        .catch((err) => {\r\n            loginTeacherInDB(e.target[0].value, e.target[1].value)\r\n            .then((res) => {\r\n                dispatchUserData(loginAction({ user: res.user, token: res.token }));\r\n                saveUserOnCookie(res);\r\n                if (isComponentMounted) setHasLoginFailed(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                if (isComponentMounted) setHasLoginFailed(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmitLoginIn} className=\"login-form\">\r\n                <input type=\"text\" className=\"form-input\" placeholder=\"Email / studentID\" onBlur={emailAndIdInputOnBlur}></input>\r\n                { isEmailOrIdInputEmpty && <span className=\"input-error-message\">*Email or ID cannot be empty!</span> }\r\n\r\n                <input type=\"password\" className=\"form-input\" placeholder=\"Password\" onBlur={passwordInputOnBlur}></input>\r\n                { passwordInputErrorMessage !== '' && <span className=\"input-error-message\">*{passwordInputErrorMessage}</span> }\r\n                \r\n                <button type=\"submit\" className=\"login-button\" disabled={isEmailOrIdInputEmpty || passwordInputErrorMessage !== ''}>Login</button>\r\n\r\n                { hasLoginFailed && <span className=\"input-error-message\"><br></br>Login failed! Please try again</span> }\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LoginForm;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\server\\db\\student.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\actions\\loginActions.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\server\\db\\teacher.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\router\\LoginRoute.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\login\\SignupForm.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\server\\db\\course.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\student\\ClassAttendance.js",[],["148","149"],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\AddCourseModal.js",["150"],"import React from 'react';\r\nimport RegisterCourseForm from './RegisterCourseForm';\r\n\r\nconst AddCourseModal = (props) => {\r\n    const closeModalButton = (e) => {\r\n        closeModal(e);\r\n    }\r\n    const modalClicked = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n    const closeModal = (e) => {\r\n        if (e != undefined) e.preventDefault();\r\n        props.setIsAddCourseModalOpen(false)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modal-container\" onClick={closeModal}>\r\n            <div className=\"checkout-modal modal\" onClick={modalClicked}>\r\n                <button className=\"close-modal\" onClick={closeModalButton}>x</button>\r\n\r\n                <RegisterCourseForm setIsAddCourseModalOpen={props.setIsAddCourseModalOpen} setIsRegisterCourseVerificationNoticeOpen={props.setIsRegisterCourseVerificationNoticeOpen} />\r\n\r\n                <div className=\"checkout-modal-buttons modal-buttons\">\r\n                    <span className=\"modal-button grey-button\" onClick={closeModalButton}>Cancel</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddCourseModal;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\RegisterCourseForm.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\main\\Notification.js",["151"],"import React, { useEffect } from 'react'\r\n\r\nconst Notification = (props) => {\r\n    const closeNotification = () => {\r\n        props.setIsNotificationOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            props.setIsNotificationOpen(false);\r\n        }, 3000);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"notification-container\">\r\n            <span>{props.text}</span>\r\n            <div className=\"close-notification-container\"><span className=\"close-notification\" onClick={closeNotification}>x</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\user\\ChangePasswordModal.js",["152"],"import React from 'react';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\nconst ChangePasswordModal = (props) => {\r\n    const closeModalButton = (e) => {\r\n        closeModal(e);\r\n    }\r\n    const modalClicked = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n    const closeModal = (e) => {\r\n        if (e != undefined) e.preventDefault();\r\n        props.setIsChangePasswordModalOpen(false)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modal-container\" onClick={closeModal}>\r\n            <div className=\"checkout-modal modal\" onClick={modalClicked}>\r\n                <button className=\"close-modal\" onClick={closeModalButton}>x</button>\r\n\r\n                <ChangePasswordForm\r\n                    setIsChangePasswordModalOpen={props.setIsChangePasswordModalOpen}\r\n                    setIsChangePasswordNoticeOpen={props.setIsChangePasswordNoticeOpen}\r\n                    setNotificationText={props.setNotificationText}\r\n                />\r\n\r\n                <div className=\"checkout-modal-buttons modal-buttons\">\r\n                    <span className=\"modal-button grey-button\" onClick={closeModalButton}>Cancel</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ChangePasswordModal;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\user\\ChangePasswordForm.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\student\\StudentCourse.js",["153","154","155"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { LoginContext } from '../../context/loginContext';\r\nimport { getCourseFromDB } from '../../server/db/course';\r\nimport { getStudentAttendanceFromDB, insertStudentAttendanceInDB } from '../../server/db/student';\r\nimport Notification from '../main/Notification';\r\nimport AttendanceModal from './AttendanceModal';\r\nimport { getIndexOfClassInAttendanceArray } from '../../utils/utils';\r\nimport CourseWrapper from '../user/CourseWrapper';\r\n\r\nconst StudentCourse = (props) => {\r\n    const { userDataState } = useContext(LoginContext);\r\n\r\n    const [course, setCourse] = useState();\r\n    const [showAttendanceModal, setShowAttendanceModal] = useState(false);\r\n    const [isUpdateStudentAttendanceNoticeOpen, setIsUpdateStudentAttendanceNoticeOpen] = useState(false);\r\n    const [notificationText, setNotificationText] = useState('');\r\n    const [courseAttendance, setCourseAttendance] = useState([]); // course attendance from db\r\n    const [classesArr, setClassesArr] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCourseFromDB(props.courseDetailsAndStudentAttendance.courseRef, userDataState.token)\r\n        .then((res) => {\r\n            setCourse(res);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    // When opening modal update the course attendance array from db (so previous changes will be visible without refreshing page)\r\n    useEffect(() => {\r\n        if (showAttendanceModal) {\r\n            getStudentAttendanceFromDB(props.courseObjId, userDataState.token)\r\n            .then((res) => {\r\n                setCourseAttendance(res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setCourseAttendance(props.courseDetailsAndStudentAttendance.courseAttendance);\r\n            });\r\n        }\r\n    }, [showAttendanceModal]);\r\n\r\n    useEffect(() => {\r\n        if (courseAttendance.length === 0 && classesArr.length !== 0) return;\r\n\r\n        // Fill classes array with the classes attendance from the context and default values\r\n        const arr = [];\r\n        for (let i = 0; i < course?.totalNumberOfClasses; i++) {\r\n            let courseAttendanceIndex = getIndexOfClassInAttendanceArray(courseAttendance, i);\r\n            if (courseAttendanceIndex !== -1) {\r\n                arr.push({\r\n                    classNumber: i + 1,\r\n                    didStudentAttend: courseAttendance[courseAttendanceIndex].didStudentAttend,\r\n                    reasonForNotAttending: courseAttendance[courseAttendanceIndex].reasonForNotAttending,\r\n                    key: courseAttendance[courseAttendanceIndex]._id\r\n                });\r\n            } else {\r\n                arr.push({\r\n                    classNumber: i + 1,\r\n                    didStudentAttend: false,\r\n                    reasonForNotAttending: '',\r\n                    key: i\r\n                });\r\n            }\r\n        }\r\n        setClassesArr(arr);\r\n    }, [courseAttendance]);\r\n\r\n    const showAttendanceModalOnClick = () => {\r\n        setShowAttendanceModal(!showAttendanceModal);\r\n    }\r\n\r\n    const changeAttendanceOnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let attendanceInputs = Array.from(e.target.children[0].children[0].children).slice(2);\r\n        attendanceInputs = attendanceInputs.slice(0, attendanceInputs.length - 2);\r\n\r\n        // Array that holds all the changes in the classes attendance\r\n        const classesUpdateArr = [];\r\n        for (let [i, classInputs] of attendanceInputs.entries()) {\r\n            const classDetailsArr = Array.from(classInputs.children);\r\n            if (classesArr[i].didStudentAttend !== classDetailsArr[1].children[0].checked\r\n                || classesArr[i].reasonForNotAttending !== classDetailsArr[2].value) {\r\n                    classesUpdateArr.push({\r\n                        classNumber: i + 1,\r\n                        didStudentAttend: classDetailsArr[1].children[0].checked,\r\n                        reasonForNotAttending: classDetailsArr[2].value,\r\n                    });\r\n                }\r\n        }\r\n\r\n        if (classesUpdateArr.length !== 0) {\r\n            insertStudentAttendanceInDB(props.courseObjId, classesUpdateArr, userDataState.token)\r\n            .then((res) => {\r\n                // Update the original attendance array to reflect the last changes (so changing back is possible without refreshing the page)\r\n                for (let i = 0; i < classesArr.length; i++) {\r\n                    let updatedClassIndex = getIndexOfClassInAttendanceArray(classesUpdateArr, i);\r\n                    if (updatedClassIndex !== -1) {\r\n                        classesArr[i] = {\r\n                            classNumber: i + 1,\r\n                            didStudentAttend: classesUpdateArr[updatedClassIndex].didStudentAttend,\r\n                            reasonForNotAttending: classesUpdateArr[updatedClassIndex].reasonForNotAttending,\r\n                            key: i\r\n                        };\r\n                    }\r\n                }\r\n\r\n                setShowAttendanceModal(false);\r\n                setIsUpdateStudentAttendanceNoticeOpen(true);\r\n                setNotificationText('Attendance updated successfully');\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsUpdateStudentAttendanceNoticeOpen(true);\r\n                setNotificationText('An error has occurred. No changes have been made');\r\n                return;\r\n            });\r\n        }\r\n        else {\r\n            setIsUpdateStudentAttendanceNoticeOpen(true);\r\n            setNotificationText('No changes have been made');\r\n        }\r\n\r\n        setShowAttendanceModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !!course &&\r\n                <div className=\"user-course\">\r\n                    <CourseWrapper course={course} />\r\n\r\n                    { !showAttendanceModal && <button className=\"show-attendance-button\" onClick={showAttendanceModalOnClick}>Show / change attendance</button> }\r\n\r\n                    <form onSubmit={changeAttendanceOnSubmit}>\r\n                        {\r\n                            showAttendanceModal &&\r\n                            <AttendanceModal\r\n                                setShowAttendanceModal={setShowAttendanceModal}\r\n                                classesArr={classesArr}\r\n                                isForm={true}\r\n                            />\r\n                        }\r\n                    </form>\r\n                </div>\r\n            }\r\n\r\n            { isUpdateStudentAttendanceNoticeOpen && <Notification setIsNotificationOpen={setIsUpdateStudentAttendanceNoticeOpen} text={notificationText} /> }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default StudentCourse;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\TeacherCourse.js",["156","157","158"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { LoginContext } from '../../context/loginContext';\r\nimport { getStudentFromDB } from '../../server/db/student';\r\nimport AddStudentToCourseModal from './AddStudentToCourseModal';\r\nimport EnrolledStudent from './EnrolledStudent';\r\nimport Notification from '../main/Notification';\r\nimport CourseWrapper from '../user/CourseWrapper';\r\n\r\nconst TeacherCourse = (props) => {\r\n    const { userDataState } = useContext(LoginContext);\r\n\r\n    const [attendants, setAttendants] = useState([]);\r\n    const [showEnrolledStudents, setShowEnrolledStudents] = useState(false);\r\n    const [isAddStudentToCourseModalOpen, setIsAddStudentToCourseModalOpen] = useState(false);\r\n    const [isStudentAddedToCourseNoticeOpen, setIsStudentAddedToCourseNoticeOpen] = useState(false);\r\n    const [notificationText, setNotificationText] = useState('');\r\n\r\n    const students = [];\r\n    \r\n    useEffect(async () => {\r\n        for (let student of props.course.attendants) {\r\n            const res = await getStudentFromDB(student, userDataState.token);\r\n            students.push(res);\r\n        }\r\n        setAttendants(students);\r\n    }, []);\r\n\r\n    const switchShowEnrolledStudentsOnClick = () => {\r\n        setShowEnrolledStudents(!showEnrolledStudents);\r\n    }\r\n\r\n    const openAddStudentToCourseModalOnClick = () => {\r\n        setIsAddStudentToCourseModalOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-course\">\r\n            <CourseWrapper course={props.course} />\r\n            \r\n            <br></br>\r\n            { !showEnrolledStudents && <button className=\"show-students-button\" onClick={switchShowEnrolledStudentsOnClick}>Show enrolled students</button> }\r\n            { showEnrolledStudents && <button className=\"show-students-button\" onClick={switchShowEnrolledStudentsOnClick}>Hide</button> }\r\n            \r\n            {\r\n                showEnrolledStudents &&\r\n                <div className=\"enrolled-students-wrapper\">\r\n                    { showEnrolledStudents &&\r\n                        attendants.map((student) => {\r\n                            if (!student) return;\r\n\r\n                            return <EnrolledStudent\r\n                                key={student._id}\r\n                                courseObjId={props.course._id}\r\n                                studentDetails={student}\r\n                                totalNumberOfClasses={props.course.totalNumberOfClasses}\r\n                                />;\r\n                    }) }\r\n                </div>\r\n            }\r\n\r\n            <button className=\"add-student-button\" onClick={openAddStudentToCourseModalOnClick}>Add student</button>\r\n            {\r\n                isAddStudentToCourseModalOpen &&\r\n                <AddStudentToCourseModal\r\n                    setIsAddStudentToCourseModalOpen={setIsAddStudentToCourseModalOpen}\r\n                    setIsStudentAddedToCourseNoticeOpen={setIsStudentAddedToCourseNoticeOpen}\r\n                    setNotificationText={setNotificationText}\r\n                    courseId={props.course.courseId}\r\n                />\r\n            }\r\n\r\n            <br></br><br></br>\r\n\r\n            { isStudentAddedToCourseNoticeOpen && <Notification setIsNotificationOpen={setIsStudentAddedToCourseNoticeOpen} text={notificationText} /> }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TeacherCourse;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\EnrolledStudent.js",["159","160"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { LoginContext } from '../../context/loginContext';\r\nimport { getStudentAttendanceWithStudentIdFromDB } from '../../server/db/teacher';\r\nimport AttendanceModal from '../student/AttendanceModal';\r\nimport { getIndexOfClassInAttendanceArray } from '../../utils/utils';\r\n\r\nconst EnrolledStudent = (props) => {\r\n    const { userDataState } = useContext(LoginContext);\r\n\r\n    const [isStudentAttendanceModalOpen, setIsStudentAttendanceModalOpen] = useState(false);\r\n    const [courseAttendance, setCourseAttendance] = useState([]); // course attendance from db\r\n    const [classesArr, setClassesArr] = useState([]);\r\n\r\n    const openAttendanceModalOnClick = () => {\r\n        setIsStudentAttendanceModalOpen(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getStudentAttendanceWithStudentIdFromDB(props.studentDetails.studentId, props.courseObjId, userDataState.token)\r\n        .then((res) => {\r\n            setCourseAttendance(res);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const arr = [];\r\n        for (let i = 0; i < props.totalNumberOfClasses; i++) {\r\n            let courseAttendanceIndex = getIndexOfClassInAttendanceArray(courseAttendance, i);\r\n            if (courseAttendanceIndex !== -1) {\r\n                arr.push({\r\n                    classNumber: i + 1,\r\n                    didStudentAttend: courseAttendance[courseAttendanceIndex].didStudentAttend,\r\n                    reasonForNotAttending: courseAttendance[courseAttendanceIndex].reasonForNotAttending,\r\n                    key: courseAttendance[courseAttendanceIndex]._id\r\n                });\r\n            } else {\r\n                arr.push({\r\n                    classNumber: i + 1,\r\n                    didStudentAttend: false,\r\n                    reasonForNotAttending: '',\r\n                    key: i\r\n                });\r\n            }\r\n        }\r\n        setClassesArr(arr);\r\n    }, [courseAttendance]);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span className=\"student-detail\">Name: {props.studentDetails.fullName}</span>\r\n                <br></br><br></br>\r\n                <span className=\"student-detail\">email: {props.studentDetails.email}</span>\r\n                <br></br><br></br>\r\n                <span className=\"student-detail\">Student ID: {props.studentDetails.studentId}</span>\r\n                <br></br><br></br>\r\n                <button onClick={openAttendanceModalOnClick} className=\"show-attendance-button\">Show attendance</button>\r\n            </div>\r\n\r\n            {\r\n                isStudentAttendanceModalOpen &&\r\n                <AttendanceModal\r\n                    setShowAttendanceModal={setIsStudentAttendanceModalOpen}\r\n                    classesArr={classesArr}\r\n                    isForm={false}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EnrolledStudent;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\AddStudentToCourseModal.js",["161"],"import React from 'react';\r\nimport AddStudentToCourseForm from './AddStudentToCourseForm';\r\n\r\nconst AddStudentToCourseModal = (props) => {\r\n    const closeModalButton = (e) => {\r\n        closeModal(e);\r\n    }\r\n    const modalClicked = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n    const closeModal = (e) => {\r\n        if (e != undefined) e.preventDefault();\r\n        props.setIsAddStudentToCourseModalOpen(false)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modal-container\" onClick={closeModal}>\r\n            <div className=\"checkout-modal modal\" onClick={modalClicked}>\r\n                <button className=\"close-modal\" onClick={closeModalButton}>x</button>\r\n\r\n                <AddStudentToCourseForm\r\n                    setIsAddStudentToCourseModalOpen={props.setIsAddStudentToCourseModalOpen}\r\n                    setIsStudentAddedToCourseNoticeOpen={props.setIsStudentAddedToCourseNoticeOpen}\r\n                    setNotificationText={props.setNotificationText}\r\n                    courseId={props.courseId}\r\n                />\r\n\r\n                <div className=\"checkout-modal-buttons modal-buttons\">\r\n                    <span className=\"modal-button grey-button\" onClick={closeModalButton}>Cancel</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AddStudentToCourseModal;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\teacher\\AddStudentToCourseForm.js",[],"D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\student\\AttendanceModal.js",["162"],"import React from 'react';\r\nimport ClassAttendance from './ClassAttendance';\r\n\r\nconst AttendanceModal = (props) => {\r\n    const modalClicked = (e) => {\r\n        e.stopPropagation();\r\n    }\r\n    const closeModal = (e) => {\r\n        if (e != undefined) e.preventDefault();\r\n        props.setShowAttendanceModal(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-container\" onClick={closeModal}>\r\n            <div className=\"attendance-modal modal\" onClick={modalClicked}>\r\n                <button className=\"close-modal\" onClick={closeModal}>x</button>\r\n\r\n                <div className=\"attendance-form-header\">\r\n                    <div className=\"class-number\">Class number</div>\r\n                    <div className=\"attendance-checkbox\">Attended class?</div>\r\n                    <div className=\"reason\">Reason</div>\r\n                </div>\r\n\r\n                { props.classesArr.map((classAttendance) => {\r\n                    return (\r\n                        <ClassAttendance isForm={props.isForm} classAttendanceDetails={classAttendance} key={classAttendance.classNumber} />\r\n                    );\r\n                }) }\r\n\r\n                {\r\n                    props.isForm ?\r\n                    <>\r\n                        <button className=\"attendance-submit-button modal-button green-button\" type=\"submit\">submit</button>\r\n\r\n                        <div className=\"modal-buttons\">\r\n                            <span className=\"modal-button grey-button close-attendance-modal\" onClick={closeModal}>Cancel</span>\r\n                        </div>\r\n                    </> :\r\n                    <div className=\"modal-buttons\">\r\n                        <span className=\"modal-button grey-button close-attendance-modal\" onClick={closeModal}>Close</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AttendanceModal;","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\utils\\utils.js",["163"],"export const getIndexOfClassInAttendanceArray = (arr, i) => {\r\n    let indexOfClass;\r\n    if (arr.some((oneClass, index) => {\r\n        if (oneClass.classNumber === i + 1) {\r\n            indexOfClass = index;\r\n            return true;\r\n        }\r\n    })) return indexOfClass;\r\n\r\n    return -1;\r\n};","D:\\Shaked\\Talpiot-HyperActive\\fullstack apps\\courses-app\\client\\src\\components\\user\\CourseWrapper.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":20,"column":23,"nodeType":"170","messageId":"171","endLine":20,"endColumn":41},{"ruleId":"172","severity":1,"message":"173","line":20,"column":44,"nodeType":"174","endLine":20,"endColumn":49},{"ruleId":"172","severity":1,"message":"175","line":37,"column":8,"nodeType":"176","endLine":37,"endColumn":10,"suggestions":"177"},{"ruleId":"168","severity":1,"message":"178","line":1,"column":29,"nodeType":"170","messageId":"171","endLine":1,"endColumn":38},{"ruleId":"172","severity":1,"message":"173","line":17,"column":45,"nodeType":"174","endLine":17,"endColumn":50},{"ruleId":"164","replacedBy":"179"},{"ruleId":"166","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":12,"column":15,"nodeType":"183","messageId":"184","endLine":12,"endColumn":17},{"ruleId":"172","severity":1,"message":"185","line":12,"column":8,"nodeType":"176","endLine":12,"endColumn":10,"suggestions":"186"},{"ruleId":"181","severity":1,"message":"182","line":12,"column":15,"nodeType":"183","messageId":"184","endLine":12,"endColumn":17},{"ruleId":"172","severity":1,"message":"187","line":28,"column":8,"nodeType":"176","endLine":28,"endColumn":10,"suggestions":"188"},{"ruleId":"172","severity":1,"message":"189","line":42,"column":8,"nodeType":"176","endLine":42,"endColumn":29,"suggestions":"190"},{"ruleId":"172","severity":1,"message":"191","line":68,"column":8,"nodeType":"176","endLine":68,"endColumn":26,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"193","line":20,"column":15,"nodeType":"194","endLine":26,"endColumn":6},{"ruleId":"172","severity":1,"message":"195","line":26,"column":8,"nodeType":"176","endLine":26,"endColumn":10,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":49,"column":43,"nodeType":"199","messageId":"200","endLine":49,"endColumn":50},{"ruleId":"172","severity":1,"message":"201","line":26,"column":8,"nodeType":"176","endLine":26,"endColumn":10,"suggestions":"202"},{"ruleId":"172","severity":1,"message":"203","line":49,"column":8,"nodeType":"176","endLine":49,"endColumn":26,"suggestions":"204"},{"ruleId":"181","severity":1,"message":"182","line":12,"column":15,"nodeType":"183","messageId":"184","endLine":12,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":9,"column":15,"nodeType":"183","messageId":"184","endLine":9,"endColumn":17},{"ruleId":"197","severity":1,"message":"205","line":3,"column":36,"nodeType":"194","messageId":"206","endLine":3,"endColumn":38},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'isComponentMounted' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'isComponentMounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'courses', 'userDataState.token', and 'userDataState.user'. Either include them or remove the dependency array. You can also do a functional update 'setCourses(c => ...)' if you only need 'courses' in the 'setCourses' call.","ArrayExpression",["209"],"'useEffect' is defined but never used.",["207"],["208"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["210"],"React Hook useEffect has missing dependencies: 'props.courseDetailsAndStudentAttendance.courseRef' and 'userDataState.token'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'props.courseDetailsAndStudentAttendance.courseAttendance', 'props.courseObjId', and 'userDataState.token'. Either include them or remove the dependency array. If 'setCourseAttendance' needs the current value of 'props.courseDetailsAndStudentAttendance.courseAttendance', you can also switch to useReducer instead of useState and read 'props.courseDetailsAndStudentAttendance.courseAttendance' in the reducer.",["212"],"React Hook useEffect has missing dependencies: 'classesArr.length' and 'course?.totalNumberOfClasses'. Either include them or remove the dependency array.",["213"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'props.course.attendants', 'students', and 'userDataState.token'. Either include them or remove the dependency array.",["214"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'props.courseObjId', 'props.studentDetails.studentId', and 'userDataState.token'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'props.totalNumberOfClasses'. Either include it or remove the dependency array.",["216"],"Array.prototype.some() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [courses, userDataState.token, userDataState.user]",{"range":"233","text":"234"},"Update the dependencies array to be: [props]",{"range":"235","text":"236"},"Update the dependencies array to be: [props.courseDetailsAndStudentAttendance.courseRef, userDataState.token]",{"range":"237","text":"238"},"Update the dependencies array to be: [props.courseDetailsAndStudentAttendance.courseAttendance, props.courseObjId, showAttendanceModal, userDataState.token]",{"range":"239","text":"240"},"Update the dependencies array to be: [classesArr.length, course?.totalNumberOfClasses, courseAttendance]",{"range":"241","text":"242"},"Update the dependencies array to be: [props.course.attendants, students, userDataState.token]",{"range":"243","text":"244"},"Update the dependencies array to be: [props.courseObjId, props.studentDetails.studentId, userDataState.token]",{"range":"245","text":"246"},"Update the dependencies array to be: [courseAttendance, props.totalNumberOfClasses]",{"range":"247","text":"248"},[1343,1345],"[courses, userDataState.token, userDataState.user]",[298,300],"[props]",[1318,1320],"[props.courseDetailsAndStudentAttendance.courseRef, userDataState.token]",[1883,1904],"[props.courseDetailsAndStudentAttendance.courseAttendance, props.courseObjId, showAttendanceModal, userDataState.token]",[3005,3023],"[classesArr.length, course?.totalNumberOfClasses, courseAttendance]",[1182,1184],"[props.course.attendants, students, userDataState.token]",[1089,1091],"[props.courseObjId, props.studentDetails.studentId, userDataState.token]",[2014,2032],"[courseAttendance, props.totalNumberOfClasses]"]